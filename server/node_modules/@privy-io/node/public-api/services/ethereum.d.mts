import { WalletRpcParams, WalletRpcResponse } from "../../resources.mjs";
import { ReplaceParams, PrivyWalletsService } from "./wallets.mjs";
import { PrivyWalletsRpcInput } from "./wallets.mjs";
export declare class PrivyEthereumService {
    private privyWalletsService;
    constructor(privyWalletsService: PrivyWalletsService);
    signMessage(walletId: string, { message, ...input }: PrivyEthereumService.SignMessageInput): Promise<WalletRpcResponse.EthereumPersonalSignRpcResponse.Data>;
    signSecp256k1(walletId: string, input: PrivyEthereumService.SignSecp256k1Input): Promise<WalletRpcResponse.EthereumSecp256k1SignRpcResponse.Data>;
    sign7702Authorization(walletId: string, input: PrivyEthereumService.Sign7702AuthorizationInput): Promise<WalletRpcResponse.EthereumSign7702AuthorizationRpcResponse.Data>;
    signTransaction(walletId: string, input: PrivyEthereumService.SignTransactionInput): Promise<WalletRpcResponse.EthereumSignTransactionRpcResponse.Data>;
    signTypedData(walletId: string, input: PrivyEthereumService.SignTypedDataInput): Promise<WalletRpcResponse.EthereumSignTypedDataRpcResponse.Data>;
    sendTransaction(walletId: string, input: PrivyEthereumService.SendTransactionInput): Promise<WalletRpcResponse.EthereumSendTransactionRpcResponse.Data>;
}
/**
 * The namespace for types related to the Ethereum service class.
 * @see {@link PrivyEthereumService} class.
 * @see {@link PrivyWalletsRpcInput} type.
 */
export declare namespace PrivyEthereumService {
    /**
     * The input type for the {@link PrivyEthereumService.signMessage} method.
     * Instead of accepting the raw `params` object, it accepts a message `string` or `Uint8Array`
     * that is automatically converted to the right `params` object.
     */
    type SignMessageInput = ReplaceParams<PrivyWalletsRpcInput<WalletRpcParams.EthereumPersonalSignRpcInput>, {
        message: string | Uint8Array;
    }>;
    /** The input type for the {@link PrivyEthereumService.signSecp256k1} method. */
    type SignSecp256k1Input = PrivyWalletsRpcInput<WalletRpcParams.EthereumSecp256k1SignRpcInput>;
    /** The input type for the {@link PrivyEthereumService.sign7702Authorization} method. */
    type Sign7702AuthorizationInput = PrivyWalletsRpcInput<WalletRpcParams.EthereumSign7702AuthorizationRpcInput>;
    /** The input type for the {@link PrivyEthereumService.signTransaction} method. */
    type SignTransactionInput = PrivyWalletsRpcInput<WalletRpcParams.EthereumSignTransactionRpcInput>;
    /** The input type for the {@link PrivyEthereumService.signTypedData} method. */
    type SignTypedDataInput = PrivyWalletsRpcInput<WalletRpcParams.EthereumSignTypedDataRpcInput>;
    /** The input type for the {@link PrivyEthereumService.sendTransaction} method. */
    type SendTransactionInput = PrivyWalletsRpcInput<WalletRpcParams.EthereumSendTransactionRpcInput>;
}
//# sourceMappingURL=ethereum.d.mts.map