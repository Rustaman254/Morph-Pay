import { WalletRpcParams, WalletRpcResponse } from "../../resources.js";
import { PrivyWalletsService, ReplaceParams } from "./wallets.js";
import { PrivyWalletsRpcInput } from "./wallets.js";
export declare class PrivySolanaService {
    private privyWalletsService;
    constructor(privyWalletsService: PrivyWalletsService);
    signMessage(walletId: string, { message, ...input }: PrivySolanaService.SignMessageInput): Promise<WalletRpcResponse.SolanaSignMessageRpcResponse.Data>;
    signTransaction(walletId: string, { transaction, ...input }: PrivySolanaService.SignTransactionInput): Promise<WalletRpcResponse.SolanaSignTransactionRpcResponse.Data>;
    signAndSendTransaction(walletId: string, { transaction, ...input }: PrivySolanaService.SignAndSendTransactionInput): Promise<WalletRpcResponse.SolanaSignAndSendTransactionRpcResponse.Data>;
}
/**
 * The namespace for types related to the Solana service class.
 * @see {@link PrivySolanaService} class.
 * @see {@link PrivyWalletsRpcInput} type.
 */
export declare namespace PrivySolanaService {
    /**
     * The input type for the {@link PrivySolanaService.signMessage} method.
     * Instead of accepting the raw `params` object, it accepts a message `string` or `Uint8Array`
     * that is automatically converted to the right `params` object.
     */
    type SignMessageInput = ReplaceParams<PrivyWalletsRpcInput<WalletRpcParams.SolanaSignMessageRpcInput>, {
        message: string | Uint8Array;
    }>;
    /**
     * The input type for the {@link PrivySolanaService.signTransaction} method.
     * Instead of accepting the raw `params` object, it accepts a transaction `string` or `Uint8Array`
     * that is automatically converted to the right `params` object.
     */
    type SignTransactionInput = ReplaceParams<PrivyWalletsRpcInput<WalletRpcParams.SolanaSignTransactionRpcInput>, {
        transaction: string | Uint8Array;
    }>;
    /**
     * The input type for the {@link PrivySolanaService.signAndSendTransaction} method.
     * Instead of accepting the raw `params` object, it accepts a transaction `string` or `Uint8Array`
     * that is automatically converted to the right `params` object.
     */
    type SignAndSendTransactionInput = ReplaceParams<PrivyWalletsRpcInput<WalletRpcParams.SolanaSignAndSendTransactionRpcInput>, {
        transaction: string | Uint8Array;
    }>;
}
//# sourceMappingURL=solana.d.ts.map