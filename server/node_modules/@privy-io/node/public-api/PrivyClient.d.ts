import { ClientOptions } from "../client.js";
import { PrivyWalletsService } from "./services/wallets.js";
import { PrivyPoliciesService } from "./services/policies.js";
import { PrivyTransactionsService } from "./services/transactions.js";
import { PrivyKeyQuorumsService } from "./services/key-quorums.js";
import { PrivyUsersService } from "./services/users.js";
import { PrivyUtils } from "./services/utils.js";
type InternalClientOptions = Omit<ClientOptions, 'appID' | 'appSecret' | 'baseUrl'>;
export interface PrivyClientOptions extends InternalClientOptions {
    appId: string;
    appSecret: string;
    apiUrl?: string;
    authorizationKeyCacheMaxCapacity?: number;
    jwtVerificationKey?: string;
}
export declare class PrivyClient {
    private privyApiClient;
    private walletsService;
    private policiesService;
    private transactionsService;
    private keyQuorumsService;
    private usersService;
    private utilsService;
    private jwtExchangeService;
    constructor({ appId, appSecret, apiUrl, authorizationKeyCacheMaxCapacity, defaultHeaders, jwtVerificationKey, ...clientOptions }: PrivyClientOptions);
    wallets(): PrivyWalletsService;
    policies(): PrivyPoliciesService;
    transactions(): PrivyTransactionsService;
    keyQuorums(): PrivyKeyQuorumsService;
    users(): PrivyUsersService;
    utils(): PrivyUtils;
}
export {};
//# sourceMappingURL=PrivyClient.d.ts.map