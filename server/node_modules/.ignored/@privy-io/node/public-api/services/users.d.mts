import { PrivyAPI } from "../../client.mjs";
import { PrivyAppJWKS } from "../../lib/auth.mjs";
import { User, Users } from "../../resources.mjs";
export declare class PrivyUsersService extends Users {
    private appJwks;
    constructor(privyApiClient: PrivyAPI, appJwks: PrivyAppJWKS);
    /**
     * Gets a user object from the identity token.
     * This verifies the token and parses the payload into a `User` object.
     * Note the user object may be incomplete due to the size constraints of the identity token.
     *
     * @param input.id_token the identity token to parse.
     * @returns the user object parsed from the identity token.
     *
     * @example
     * const idToken = req.cookies.get('privy-id-token'); // or however your framework surfaces cookies
     * const user = await client.users().get({idToken});
     */
    get({ id_token }: PrivyUsersService.GetInput): Promise<User>;
}
export declare namespace PrivyUsersService {
    type GetInput = {
        id_token: string;
    };
}
//# sourceMappingURL=users.d.mts.map