import { verifyIdentityToken } from "../../lib/auth.mjs";
import { Users } from "../../resources.mjs";
export class PrivyUsersService extends Users {
    constructor(privyApiClient, appJwks) {
        super(privyApiClient);
        this.appJwks = appJwks;
    }
    /**
     * Gets a user object from the identity token.
     * This verifies the token and parses the payload into a `User` object.
     * Note the user object may be incomplete due to the size constraints of the identity token.
     *
     * @param input.id_token the identity token to parse.
     * @returns the user object parsed from the identity token.
     *
     * @example
     * const idToken = req.cookies.get('privy-id-token'); // or however your framework surfaces cookies
     * const user = await client.users().get({idToken});
     */
    async get({ id_token }) {
        return verifyIdentityToken({
            identity_token: id_token,
            app_id: this._client.appID,
            verification_key: this.appJwks,
        });
    }
}
//# sourceMappingURL=users.mjs.map