export { PrivyClient, type PrivyClientOptions } from "./public-api/PrivyClient.js";
export { type PrivyWalletsService } from "./public-api/services/wallets.js";
export { type PrivyEthereumService } from "./public-api/services/ethereum.js";
export { type PrivySolanaService } from "./public-api/services/solana.js";
export { type PrivyPoliciesService } from "./public-api/services/policies.js";
export { type PrivyTransactionsService } from "./public-api/services/transactions.js";
export { type PrivyKeyQuorumsService } from "./public-api/services/key-quorums.js";
export { type PrivyUsersService } from "./public-api/services/users.js";
export { type PrivyUtils } from "./public-api/services/utils.js";
export { InvalidAuthTokenError, verifyAuthToken, type VerifyAuthTokenResponse, type VerifyAuthTokenInput, verifyIdentityToken, type VerifyIdentityTokenInput, } from "./lib/auth.js";
export { type User } from "./resources/users.js";
export { type Wallet } from "./resources/wallets.js";
export { type Policy } from "./resources/policies.js";
export { type KeyQuorum } from "./resources/key-quorums.js";
export { type AuthorizationContext, type WalletApiRequestSignatureInput, formatRequestForAuthorizationSignature, generateAuthorizationSignature, generateAuthorizationSignatures, } from "./lib/authorization.js";
export { type EmbeddedWalletLinkedAccount, isEmbeddedWalletLinkedAccount } from "./lib/user-utils.js";
export { APIPromise } from "./core/api-promise.js";
export { PrivyAPIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from "./core/error.js";
//# sourceMappingURL=index.d.ts.map