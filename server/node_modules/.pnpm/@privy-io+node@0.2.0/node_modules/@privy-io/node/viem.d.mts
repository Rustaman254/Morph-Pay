import type { Hex } from 'viem';
import { type LocalAccount } from 'viem/accounts';
import type { AuthorizationContext } from "./lib/authorization.mjs";
import type { PrivyClient } from "./public-api/PrivyClient.mjs";
export interface CreateViemAccountInput {
    /** ID for the wallet. */
    walletId: string;
    /** Ethereum address for the wallet. */
    address: Hex;
    /** Authorization context for the wallet. */
    authorizationContext?: AuthorizationContext;
}
/**
 * Creates a viem `Account` instance for a Privy wallet given its ID, which can be used to sign
 * messages and send transactions with the wallet.
 *
 * @param client instance of the Privy client.
 * @param input an object specifying the details of the wallet to create the viem account for.
 * @returns viem `Account` instance for the wallet.
 */
export declare function createViemAccount(client: PrivyClient, { walletId, address, authorizationContext }: CreateViemAccountInput): LocalAccount;
//# sourceMappingURL=viem.d.mts.map