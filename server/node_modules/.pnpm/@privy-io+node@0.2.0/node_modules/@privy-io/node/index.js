"use strict";
exports = module.exports = function (...args) {
  return new exports.default(...args)
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnprocessableEntityError = exports.PermissionDeniedError = exports.InternalServerError = exports.AuthenticationError = exports.BadRequestError = exports.RateLimitError = exports.ConflictError = exports.NotFoundError = exports.APIUserAbortError = exports.APIConnectionTimeoutError = exports.APIConnectionError = exports.APIError = exports.PrivyAPIError = exports.APIPromise = exports.isEmbeddedWalletLinkedAccount = exports.generateAuthorizationSignatures = exports.generateAuthorizationSignature = exports.formatRequestForAuthorizationSignature = exports.verifyIdentityToken = exports.verifyAuthToken = exports.InvalidAuthTokenError = exports.PrivyClient = void 0;
var PrivyClient_1 = require("./public-api/PrivyClient.js");
Object.defineProperty(exports, "PrivyClient", { enumerable: true, get: function () { return PrivyClient_1.PrivyClient; } });
var auth_1 = require("./lib/auth.js");
Object.defineProperty(exports, "InvalidAuthTokenError", { enumerable: true, get: function () { return auth_1.InvalidAuthTokenError; } });
Object.defineProperty(exports, "verifyAuthToken", { enumerable: true, get: function () { return auth_1.verifyAuthToken; } });
Object.defineProperty(exports, "verifyIdentityToken", { enumerable: true, get: function () { return auth_1.verifyIdentityToken; } });
var authorization_1 = require("./lib/authorization.js");
Object.defineProperty(exports, "formatRequestForAuthorizationSignature", { enumerable: true, get: function () { return authorization_1.formatRequestForAuthorizationSignature; } });
Object.defineProperty(exports, "generateAuthorizationSignature", { enumerable: true, get: function () { return authorization_1.generateAuthorizationSignature; } });
Object.defineProperty(exports, "generateAuthorizationSignatures", { enumerable: true, get: function () { return authorization_1.generateAuthorizationSignatures; } });
var user_utils_1 = require("./lib/user-utils.js");
Object.defineProperty(exports, "isEmbeddedWalletLinkedAccount", { enumerable: true, get: function () { return user_utils_1.isEmbeddedWalletLinkedAccount; } });
var api_promise_1 = require("./core/api-promise.js");
Object.defineProperty(exports, "APIPromise", { enumerable: true, get: function () { return api_promise_1.APIPromise; } });
var error_1 = require("./core/error.js");
Object.defineProperty(exports, "PrivyAPIError", { enumerable: true, get: function () { return error_1.PrivyAPIError; } });
Object.defineProperty(exports, "APIError", { enumerable: true, get: function () { return error_1.APIError; } });
Object.defineProperty(exports, "APIConnectionError", { enumerable: true, get: function () { return error_1.APIConnectionError; } });
Object.defineProperty(exports, "APIConnectionTimeoutError", { enumerable: true, get: function () { return error_1.APIConnectionTimeoutError; } });
Object.defineProperty(exports, "APIUserAbortError", { enumerable: true, get: function () { return error_1.APIUserAbortError; } });
Object.defineProperty(exports, "NotFoundError", { enumerable: true, get: function () { return error_1.NotFoundError; } });
Object.defineProperty(exports, "ConflictError", { enumerable: true, get: function () { return error_1.ConflictError; } });
Object.defineProperty(exports, "RateLimitError", { enumerable: true, get: function () { return error_1.RateLimitError; } });
Object.defineProperty(exports, "BadRequestError", { enumerable: true, get: function () { return error_1.BadRequestError; } });
Object.defineProperty(exports, "AuthenticationError", { enumerable: true, get: function () { return error_1.AuthenticationError; } });
Object.defineProperty(exports, "InternalServerError", { enumerable: true, get: function () { return error_1.InternalServerError; } });
Object.defineProperty(exports, "PermissionDeniedError", { enumerable: true, get: function () { return error_1.PermissionDeniedError; } });
Object.defineProperty(exports, "UnprocessableEntityError", { enumerable: true, get: function () { return error_1.UnprocessableEntityError; } });
//# sourceMappingURL=index.js.map